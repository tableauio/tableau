// Protoconf - Tableau's data interchange format
// https://tableauio.github.io/

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: tableau/protobuf/wellknown.proto

package tableaupb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comparator_Sign int32

const (
	Comparator_SIGN_EQUAL            Comparator_Sign = 0 // ==
	Comparator_SIGN_NOT_EQUAL        Comparator_Sign = 1 // !=
	Comparator_SIGN_LESS             Comparator_Sign = 2 // <
	Comparator_SIGN_LESS_OR_EQUAL    Comparator_Sign = 3 // <=
	Comparator_SIGN_GREATER          Comparator_Sign = 4 // >
	Comparator_SIGN_GREATER_OR_EQUAL Comparator_Sign = 5 // >=
)

// Enum value maps for Comparator_Sign.
var (
	Comparator_Sign_name = map[int32]string{
		0: "SIGN_EQUAL",
		1: "SIGN_NOT_EQUAL",
		2: "SIGN_LESS",
		3: "SIGN_LESS_OR_EQUAL",
		4: "SIGN_GREATER",
		5: "SIGN_GREATER_OR_EQUAL",
	}
	Comparator_Sign_value = map[string]int32{
		"SIGN_EQUAL":            0,
		"SIGN_NOT_EQUAL":        1,
		"SIGN_LESS":             2,
		"SIGN_LESS_OR_EQUAL":    3,
		"SIGN_GREATER":          4,
		"SIGN_GREATER_OR_EQUAL": 5,
	}
)

func (x Comparator_Sign) Enum() *Comparator_Sign {
	p := new(Comparator_Sign)
	*p = x
	return p
}

func (x Comparator_Sign) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Comparator_Sign) Descriptor() protoreflect.EnumDescriptor {
	return file_tableau_protobuf_wellknown_proto_enumTypes[0].Descriptor()
}

func (Comparator_Sign) Type() protoreflect.EnumType {
	return &file_tableau_protobuf_wellknown_proto_enumTypes[0]
}

func (x Comparator_Sign) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Comparator_Sign.Descriptor instead.
func (Comparator_Sign) EnumDescriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{1, 0}
}

// Supported formats:
//   - N%: percentage, e.g.: 10%
//   - N‰: per thounsand, e.g.: 10‰
//   - N‱: per ten thounsand, e.g.: 10‱
//   - N/D: simple fraction, e.g.: 3/4
//   - N: only numerator, e.g.: 3 is same to 3/1
type Fraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"` // numerator
	Den int32 `protobuf:"varint,2,opt,name=den,proto3" json:"den,omitempty"` // denominator
}

func (x *Fraction) Reset() {
	*x = Fraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fraction) ProtoMessage() {}

func (x *Fraction) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fraction.ProtoReflect.Descriptor instead.
func (*Fraction) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{0}
}

func (x *Fraction) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Fraction) GetDen() int32 {
	if x != nil {
		return x.Den
	}
	return 0
}

// Format: <Sign><Fraction>
// e.g.: ==10, !=1/2, <10%, <=10‰, >10%, >=10‱
type Comparator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign  Comparator_Sign `protobuf:"varint,1,opt,name=sign,proto3,enum=tableau.Comparator_Sign" json:"sign,omitempty"`
	Value *Fraction       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Comparator) Reset() {
	*x = Comparator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comparator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comparator) ProtoMessage() {}

func (x *Comparator) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comparator.ProtoReflect.Descriptor instead.
func (*Comparator) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{1}
}

func (x *Comparator) GetSign() Comparator_Sign {
	if x != nil {
		return x.Sign
	}
	return Comparator_SIGN_EQUAL
}

func (x *Comparator) GetValue() *Fraction {
	if x != nil {
		return x.Value
	}
	return nil
}

// A 2D vector using float coordinates.
// See https://docs.godotengine.org/en/stable/classes/class_vector2.html
type Vector2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vector2) Reset() {
	*x = Vector2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2) ProtoMessage() {}

func (x *Vector2) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2.ProtoReflect.Descriptor instead.
func (*Vector2) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{2}
}

func (x *Vector2) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector2) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// A 3D vector using float coordinates.
// See https://docs.godotengine.org/en/stable/classes/class_vector3.html
type Vector3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vector3) Reset() {
	*x = Vector3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector3) ProtoMessage() {}

func (x *Vector3) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector3.ProtoReflect.Descriptor instead.
func (*Vector3) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{3}
}

func (x *Vector3) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector3) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vector3) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// A 4D vector using float coordinates.
// See https://docs.godotengine.org/en/stable/classes/class_vector4.html
type Vector4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	W float32 `protobuf:"fixed32,4,opt,name=w,proto3" json:"w,omitempty"`
}

func (x *Vector4) Reset() {
	*x = Vector4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector4) ProtoMessage() {}

func (x *Vector4) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector4.ProtoReflect.Descriptor instead.
func (*Vector4) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{4}
}

func (x *Vector4) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector4) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vector4) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Vector4) GetW() float32 {
	if x != nil {
		return x.W
	}
	return 0
}

// A 2D vector using int32 coordinates.
// See https://docs.godotengine.org/en/stable/classes/class_vector2i.html
type Vector2I struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vector2I) Reset() {
	*x = Vector2I{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector2I) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2I) ProtoMessage() {}

func (x *Vector2I) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2I.ProtoReflect.Descriptor instead.
func (*Vector2I) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{5}
}

func (x *Vector2I) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector2I) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// A 3D vector using int32 coordinates.
// See https://docs.godotengine.org/en/stable/classes/class_vector3i.html
type Vector3I struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z int32 `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vector3I) Reset() {
	*x = Vector3I{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector3I) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector3I) ProtoMessage() {}

func (x *Vector3I) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector3I.ProtoReflect.Descriptor instead.
func (*Vector3I) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{6}
}

func (x *Vector3I) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector3I) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vector3I) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// A 4D vector using int32 coordinates.
// See https://docs.godotengine.org/en/stable/classes/class_vector4i.html
type Vector4I struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z int32 `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
	W int32 `protobuf:"varint,4,opt,name=w,proto3" json:"w,omitempty"`
}

func (x *Vector4I) Reset() {
	*x = Vector4I{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector4I) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector4I) ProtoMessage() {}

func (x *Vector4I) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector4I.ProtoReflect.Descriptor instead.
func (*Vector4I) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{7}
}

func (x *Vector4I) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector4I) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vector4I) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Vector4I) GetW() int32 {
	if x != nil {
		return x.W
	}
	return 0
}

// Version number in [dot-decimal notation](https://en.wikipedia.org/wiki/Dot-decimal_notation).
// The version form is "<MAJOR>.<MINOR>.<PATCH>[.<OTHER>]...".
//
// You can specify the version pattern as "<MAJOR_MAX>.<MINOR_MAX>.<PATCH_MAX>[.<OTHER_MAX>]...".
//   - Each part with suffix "MAX" represents the max decimal value of each part in the dot-decimal notation.
//   - Each part "XXX_MAX+1" represents the part's value occupying in an integer.
//   - For example, the formula for general pattern "<MAJOR_MAX>.<MINOR_MAX>.<PATCH_MAX>" is:
//     MAJOR*(MINOR_MAX+1)*(PATCH_MAX+1) + MINOR*(PATCH_MAX+1) + PATCH
//
// Default pattern: "255.255.255".
type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str    string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`               // Version in string form.
	Val    uint64   `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`              // Version in integer form.
	Major  uint32   `protobuf:"varint,3,opt,name=major,proto3" json:"major,omitempty"`          // Major version number.
	Minor  uint32   `protobuf:"varint,4,opt,name=minor,proto3" json:"minor,omitempty"`          // Minor version number.
	Patch  uint32   `protobuf:"varint,5,opt,name=patch,proto3" json:"patch,omitempty"`          // Patch version number.
	Others []uint32 `protobuf:"varint,6,rep,packed,name=others,proto3" json:"others,omitempty"` // Other version numbers, such as build number, resource version, and so on.
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_protobuf_wellknown_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_protobuf_wellknown_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_tableau_protobuf_wellknown_proto_rawDescGZIP(), []int{8}
}

func (x *Version) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *Version) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *Version) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Version) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Version) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *Version) GetOthers() []uint32 {
	if x != nil {
		return x.Others
	}
	return nil
}

var File_tableau_protobuf_wellknown_proto protoreflect.FileDescriptor

var file_tableau_protobuf_wellknown_proto_rawDesc = []byte{
	0x0a, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x1a, 0x1e, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x61, 0x75, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x61, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x08, 0x46,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x65, 0x6e, 0x22, 0xe3, 0x01, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x61, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61,
	0x75, 0x2e, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x7e, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x49, 0x47,
	0x4e, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49, 0x47,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x49, 0x47, 0x4e, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55,
	0x41, 0x4c, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x47, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x52, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x47,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10,
	0x05, 0x22, 0x37, 0x0a, 0x07, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x12, 0x15, 0x0a, 0x01,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x58,
	0x52, 0x01, 0x78, 0x12, 0x15, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x42, 0x07,
	0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x59, 0x52, 0x01, 0x79, 0x22, 0x4e, 0x0a, 0x07, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x33, 0x12, 0x15, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x58, 0x52, 0x01, 0x78, 0x12, 0x15, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x59,
	0x52, 0x01, 0x79, 0x12, 0x15, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x42, 0x07,
	0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x5a, 0x52, 0x01, 0x7a, 0x22, 0x65, 0x0a, 0x07, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x34, 0x12, 0x15, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x58, 0x52, 0x01, 0x78, 0x12, 0x15, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x59,
	0x52, 0x01, 0x79, 0x12, 0x15, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x42, 0x07,
	0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x5a, 0x52, 0x01, 0x7a, 0x12, 0x15, 0x0a, 0x01, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x57, 0x52, 0x01,
	0x77, 0x22, 0x38, 0x0a, 0x08, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x69, 0x12, 0x15, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01,
	0x58, 0x52, 0x01, 0x78, 0x12, 0x15, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x59, 0x52, 0x01, 0x79, 0x22, 0x4f, 0x0a, 0x08, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x12, 0x15, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x58, 0x52, 0x01, 0x78, 0x12, 0x15,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a,
	0x01, 0x59, 0x52, 0x01, 0x79, 0x12, 0x15, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x5a, 0x52, 0x01, 0x7a, 0x22, 0x66, 0x0a, 0x08,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x34, 0x69, 0x12, 0x15, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x58, 0x52, 0x01, 0x78, 0x12,
	0x15, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03,
	0x0a, 0x01, 0x59, 0x52, 0x01, 0x79, 0x12, 0x15, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x5a, 0x52, 0x01, 0x7a, 0x12, 0x15, 0x0a,
	0x01, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x0a, 0x01,
	0x57, 0x52, 0x01, 0x77, 0x22, 0x87, 0x01, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69,
	0x6e, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x42, 0x78,
	0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x69, 0x6f, 0x2f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x61, 0x75, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x61, 0x75, 0x70, 0x62, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x42, 0xaa, 0x02, 0x18,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tableau_protobuf_wellknown_proto_rawDescOnce sync.Once
	file_tableau_protobuf_wellknown_proto_rawDescData = file_tableau_protobuf_wellknown_proto_rawDesc
)

func file_tableau_protobuf_wellknown_proto_rawDescGZIP() []byte {
	file_tableau_protobuf_wellknown_proto_rawDescOnce.Do(func() {
		file_tableau_protobuf_wellknown_proto_rawDescData = protoimpl.X.CompressGZIP(file_tableau_protobuf_wellknown_proto_rawDescData)
	})
	return file_tableau_protobuf_wellknown_proto_rawDescData
}

var file_tableau_protobuf_wellknown_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tableau_protobuf_wellknown_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_tableau_protobuf_wellknown_proto_goTypes = []interface{}{
	(Comparator_Sign)(0), // 0: tableau.Comparator.Sign
	(*Fraction)(nil),     // 1: tableau.Fraction
	(*Comparator)(nil),   // 2: tableau.Comparator
	(*Vector2)(nil),      // 3: tableau.Vector2
	(*Vector3)(nil),      // 4: tableau.Vector3
	(*Vector4)(nil),      // 5: tableau.Vector4
	(*Vector2I)(nil),     // 6: tableau.Vector2i
	(*Vector3I)(nil),     // 7: tableau.Vector3i
	(*Vector4I)(nil),     // 8: tableau.Vector4i
	(*Version)(nil),      // 9: tableau.Version
}
var file_tableau_protobuf_wellknown_proto_depIdxs = []int32{
	0, // 0: tableau.Comparator.sign:type_name -> tableau.Comparator.Sign
	1, // 1: tableau.Comparator.value:type_name -> tableau.Fraction
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tableau_protobuf_wellknown_proto_init() }
func file_tableau_protobuf_wellknown_proto_init() {
	if File_tableau_protobuf_wellknown_proto != nil {
		return
	}
	file_tableau_protobuf_tableau_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tableau_protobuf_wellknown_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_protobuf_wellknown_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comparator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_protobuf_wellknown_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_protobuf_wellknown_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_protobuf_wellknown_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_protobuf_wellknown_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector2I); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_protobuf_wellknown_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector3I); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_protobuf_wellknown_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector4I); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_protobuf_wellknown_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tableau_protobuf_wellknown_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tableau_protobuf_wellknown_proto_goTypes,
		DependencyIndexes: file_tableau_protobuf_wellknown_proto_depIdxs,
		EnumInfos:         file_tableau_protobuf_wellknown_proto_enumTypes,
		MessageInfos:      file_tableau_protobuf_wellknown_proto_msgTypes,
	}.Build()
	File_tableau_protobuf_wellknown_proto = out.File
	file_tableau_protobuf_wellknown_proto_rawDesc = nil
	file_tableau_protobuf_wellknown_proto_goTypes = nil
	file_tableau_protobuf_wellknown_proto_depIdxs = nil
}
