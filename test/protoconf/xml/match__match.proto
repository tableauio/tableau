// Generated by tableauc 0.2.1. DO NOT EDIT.
syntax = "proto3";
package testxml;
option go_package = "github.com/tableauio/tableau/cmd/test/testpb/xml";

import "cs_com_def.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "tableau/protobuf/tableau.proto";

option (tableau.workbook) = {name:"match/Match.xml"};

message MatchCfg {
  option (tableau.worksheet) = {name:"MatchCfg" namerow:1 typerow:2 noterow:3 datarow:4 nameline:1 typeline:1 nested:true};

  ConfirmTimeOutPunish confirm_time_out_punish = 1 [(tableau.field) = {name:"ConfirmTimeOutPunish"}];
  message ConfirmTimeOutPunish {
    google.protobuf.Duration time = 1 [(tableau.field) = {name:"Time"}];
  }
  MatchStatInfo match_stat_info = 2 [(tableau.field) = {name:"MatchStatInfo"}];
  message MatchStatInfo {
    google.protobuf.Duration report_interval = 1 [(tableau.field) = {name:"ReportInterval"}];
  }
  map<int32, MatchMode> match_mode_map = 3 [(tableau.field) = {name:"MatchMode" key:"MissionType" layout:LAYOUT_VERTICAL}];
  message MatchMode {
    MissionType mission_type = 1 [(tableau.field) = {name:"MissionType"}];
    string desc = 2 [(tableau.field) = {name:"Desc"}];
    Time time = 3 [(tableau.field) = {name:"Time"}];
    message Time {
      google.protobuf.Duration min_time = 1 [(tableau.field) = {name:"MinTime"}];
      google.protobuf.Duration max_time = 2 [(tableau.field) = {name:"MaxTime"}];
      google.protobuf.Duration confirm_time = 3 [(tableau.field) = {name:"ConfirmTime"}];
      int32 freq = 4 [(tableau.field) = {name:"Freq"}];
    }
    Open open = 4 [(tableau.field) = {name:"Open"}];
    message Open {
      google.protobuf.Timestamp begin_date = 1 [(tableau.field) = {name:"BeginDate"}];
      google.protobuf.Duration begin_time = 2 [(tableau.field) = {name:"BeginTime"}];
      google.protobuf.Timestamp end_date = 3 [(tableau.field) = {name:"EndDate"}];
      google.protobuf.Duration end_time = 4 [(tableau.field) = {name:"EndTime"}];
    }
    repeated Camp camp_list = 5 [(tableau.field) = {name:"Camp" key:"CampID" layout:LAYOUT_VERTICAL}];
    message Camp {
      uint32 camp_id = 1 [(tableau.field) = {name:"CampID"}];
      int32 player_num = 2 [(tableau.field) = {name:"PlayerNum"}];
      string desc = 3 [(tableau.field) = {name:"Desc"}];
    }
    Strategy strategy = 6 [(tableau.field) = {name:"Strategy"}];
    message Strategy {
      ENMMatchStrategy strategy_id = 1 [(tableau.field) = {name:"StrategyID"}];
      string desc = 2 [(tableau.field) = {name:"Desc"}];
    }
    Scope scope = 7 [(tableau.field) = {name:"Scope"}];
    message Scope {
      ENMMatchScope scope_id = 1 [(tableau.field) = {name:"ScopeID"}];
      string desc = 2 [(tableau.field) = {name:"Desc"}];
    }
    repeated Filter filter_list = 8 [(tableau.field) = {name:"Filter" key:"FilterID" layout:LAYOUT_VERTICAL}];
    message Filter {
      ENMMatchFilter filter_id = 1 [(tableau.field) = {name:"FilterID"}];
      bool open = 2 [(tableau.field) = {name:"Open"}];
      google.protobuf.Duration upd_interval = 3 [(tableau.field) = {name:"UpdInterval"}];
      int32 value = 4 [(tableau.field) = {name:"Value"}];
      string desc = 5 [(tableau.field) = {name:"Desc"}];
      repeated Power power_list = 6 [(tableau.field) = {name:"Power" key:"HornorPower" layout:LAYOUT_VERTICAL}];
      message Power {
        int32 hornor_power = 1 [(tableau.field) = {name:"HornorPower"}];
        repeated Param param_list = 2 [(tableau.field) = {name:"Param" key:"Value" layout:LAYOUT_VERTICAL}];
        message Param {
          int32 value = 1 [(tableau.field) = {name:"Value"}];
        }
      }
    }
    MatchAI match_ai = 9 [(tableau.field) = {name:"MatchAI"}];
    message MatchAI {
      bool is_open = 1 [(tableau.field) = {name:"IsOpen"}];
      bool player_only_one_camp = 2 [(tableau.field) = {name:"PlayerOnlyOneCamp"}];
      int32 guarantee_ai_ratio = 3 [(tableau.field) = {name:"GuaranteeAIRatio"}];
      repeated AI ai_list = 4 [(tableau.field) = {name:"AI" key:"Type" layout:LAYOUT_VERTICAL}];
      message AI {
        ENMAIWarmType type = 1 [(tableau.field) = {name:"Type"}];
        bool is_open = 2 [(tableau.field) = {name:"IsOpen"}];
        google.protobuf.Duration min_time = 3 [(tableau.field) = {name:"MinTime"}];
        google.protobuf.Duration max_time = 4 [(tableau.field) = {name:"MaxTime"}];
        string desc = 5 [(tableau.field) = {name:"Desc"}];
      }
    }
    repeated Random random_list = 10 [(tableau.field) = {name:"Random" key:"MissionType" layout:LAYOUT_VERTICAL}];
    message Random {
      MissionType mission_type = 1 [(tableau.field) = {name:"MissionType"}];
    }
    Route route = 11 [(tableau.field) = {name:"Route"}];
    message Route {
      int32 key = 1 [(tableau.field) = {name:"Key"}];
      string desc = 2 [(tableau.field) = {name:"Desc"}];
    }
  }
  bool _placeholder = 4 [(tableau.field) = {name:"_placeholder"}];
  MatchRoom match_room = 5 [(tableau.field) = {name:"MatchRoom"}];
  message MatchRoom {
    int32 max_loop = 1 [(tableau.field) = {name:"MaxLoop"}];
  }
  TeamRatingWeight team_rating_weight = 6 [(tableau.field) = {name:"TeamRatingWeight"}];
  message TeamRatingWeight {
    bool _placeholder = 1 [(tableau.field) = {name:"_placeholder"}];
    repeated Weight weight_list = 2 [(tableau.field) = {name:"Weight" key:"Num" layout:LAYOUT_VERTICAL}];
    message Weight {
      int32 num = 1 [(tableau.field) = {name:"Num"}];
      repeated Param param_list = 2 [(tableau.field) = {name:"Param" key:"Value" layout:LAYOUT_VERTICAL}];
      message Param {
        int32 value = 1 [(tableau.field) = {name:"Value"}];
      }
    }
  }
}
