// Code generated by tableau (protogen v0.8.0). DO NOT EDIT.
// clang-format off

syntax = "proto3";

package protoconf;

import "common/common.proto";
import "tableau/protobuf/tableau.proto";

option go_package = "github.com/tableauio/tableau/test/functest/protoconf";
option (tableau.workbook) = {name:"excel/fieldprop/FieldProp#*.csv" namerow:1 typerow:2 noterow:3 datarow:4 sep:"," subsep:":"};

message EquipConf {
  option (tableau.worksheet) = {name:"EquipConf"};

  map<uint32, Item> item_map = 1 [(tableau.field) = {key:"ID" layout:LAYOUT_VERTICAL}];
  message Item {
    uint32 id = 1 [(tableau.field) = {name:"ID" prop:{unique:true}}]; // Equip ID
    int32 damage = 2 [(tableau.field) = {name:"Damage"}]; // Equip damage
  }
}

message FieldNumberProp {
  option (tableau.worksheet) = {name:"FieldNumberProp"};

  map<uint32, Item> item_map = 1 [(tableau.field) = {key:"ID" layout:LAYOUT_VERTICAL}];
  message Item {
    uint32 id = 1 [(tableau.field) = {name:"ID"}];
    string name = 2 [(tableau.field) = {name:"Name"}];
    int32 price = 10 [(tableau.field) = {name:"Price" prop:{number:10}}];
    int32 number = 3 [(tableau.field) = {name:"Number"}];
    Decompose decompose = 20 [(tableau.field) = {name:"Decompose" prop:{number:20}}];
    message Decompose {
      uint32 id = 20 [(tableau.field) = {name:"ID" prop:{number:20}}];
      int32 num = 5 [(tableau.field) = {name:"Num" prop:{number:5}}];
    }
    repeated Attribute attribute_list = 30 [(tableau.field) = {name:"Attribute" layout:LAYOUT_HORIZONTAL prop:{number:30}}];
    message Attribute {
      uint32 id = 30 [(tableau.field) = {name:"ID" prop:{number:30}}];
      int32 value = 1 [(tableau.field) = {name:"Value"}];
    }
  }
}

message FieldPropForm {
  option (tableau.worksheet) = {name:"FieldPropForm"};

  protoconf.Transform transform_1 = 1 [(tableau.field) = {name:"Transform1" span:SPAN_INNER_CELL prop:{form:FORM_TEXT}}]; // Box transform1
  protoconf.Transform transform_2 = 2 [(tableau.field) = {name:"Transform2" span:SPAN_INNER_CELL prop:{form:FORM_JSON}}]; // Box transform2
}

message ItemConf {
  option (tableau.worksheet) = {name:"ItemConf"};

  map<uint32, Item> item_map = 1 [(tableau.field) = {key:"ID" layout:LAYOUT_VERTICAL prop:{sequence:1}}];
  message Item {
    uint32 id = 1 [(tableau.field) = {name:"ID"}]; // Item ID
    int32 num = 2 [(tableau.field) = {name:"Num"}]; // Item num
  }
}

message ScalarFieldProp {
  option (tableau.worksheet) = {name:"ScalarFieldProp"};

  map<uint32, Item> item_map = 1 [(tableau.field) = {key:"ID" layout:LAYOUT_VERTICAL prop:{sequence:1}}];
  message Item {
    uint32 id = 1 [(tableau.field) = {name:"ID" prop:{range:"1,100" unique:true refer:"ItemConf.ID"}}]; // Item ID
    repeated Prop prop_list = 2 [(tableau.field) = {name:"Prop" layout:LAYOUT_HORIZONTAL prop:{fixed:true}}]; // Prop
    message Prop {
      int32 id = 1 [(tableau.field) = {name:"ID" prop:{range:"1,10"}}]; // ID
      string flavor = 2 [(tableau.field) = {name:"Flavor"}]; // flavor
    }
    Appearance appearance = 3 [(tableau.field) = {name:"Appearance"}];
    message Appearance {
      string color = 1 [(tableau.field) = {name:"Color"}]; // Appearance color
      string shape = 2 [(tableau.field) = {name:"Shape"}]; // Appearance shape
    }
    int32 buff_id_1 = 4 [(tableau.field) = {name:"BuffID1"}, json_name="buff_id_1"]; // Buff ID 1
    repeated uint32 award_id_list = 5 [(tableau.field) = {name:"AwardID" layout:LAYOUT_INCELL prop:{refer:"ItemConf.ID"}}]; // Award ID list
    uint32 optional_bonus_id = 6 [(tableau.field) = {name:"OptionalBonusID" prop:{refer:"ItemConf.ID"}}]; // Optional bonus ID
  }
}

message SepConf {
  option (tableau.worksheet) = {name:"SepConf"};

  map<uint32, Case> case_map = 1 [(tableau.field) = {key:"ID" layout:LAYOUT_VERTICAL}];
  message Case {
    uint32 id = 1 [(tableau.field) = {name:"ID"}]; // ID
    repeated int32 number_list = 2 [(tableau.field) = {name:"Number" layout:LAYOUT_INCELL prop:{sep:"!"}}]; // Numbers
    repeated int32 value_list = 3 [(tableau.field) = {name:"Value" layout:LAYOUT_INCELL prop:{sep:"!!"}}]; // Values
    map<string, string> tip_map = 4 [(tableau.field) = {name:"Tip" layout:LAYOUT_INCELL prop:{sep:";" subsep:"="}}]; // Tips
    Item item = 5 [(tableau.field) = {name:"Item" span:SPAN_INNER_CELL prop:{sep:":"}}]; // Item
    message Item {
      uint32 id = 1 [(tableau.field) = {name:"ID"}];
      int32 num = 2 [(tableau.field) = {name:"Num"}];
    }
    repeated Prop prop_list = 6 [(tableau.field) = {name:"Prop" layout:LAYOUT_INCELL span:SPAN_INNER_CELL prop:{sep:";" subsep:"="}}]; // Props
    message Prop {
      uint32 id = 1 [(tableau.field) = {name:"ID"}];
      int32 value = 2 [(tableau.field) = {name:"Value"}];
    }
  }
}

message UniqueFalse {
  option (tableau.worksheet) = {name:"UniqueFalse"};

  map<uint32, Item> item_map = 1 [(tableau.field) = {key:"ID" layout:LAYOUT_VERTICAL}];
  message Item {
    uint32 id = 1 [(tableau.field) = {name:"ID" prop:{unique:false}}]; // Item ID
    repeated int32 num_list = 2 [(tableau.field) = {name:"Num" layout:LAYOUT_INCELL}]; // Item num
  }
}
